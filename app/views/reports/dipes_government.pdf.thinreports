report.set_layout tlf: 'reports/dipes_government', layout_options: { default: true }

@page_no = 0
@page_count = 0
@total_count = 0
@expected_count = 0
@dipe_page = [
  SystemVariable.value(:dipe_page_1),
  SystemVariable.value(:dipe_page_2),
  SystemVariable.value(:dipe_page_3),
  SystemVariable.value(:dipe_page_4),
  SystemVariable.value(:dipe_page_5),
  SystemVariable.value(:dipe_page_6)
]
@dipe_per_page = SystemVariable.value(:per_dipe_page)

report.on_page_create do |page|
  if page.layout.default?
    page.item(:dipe_header).value = @dipe_page[@page_no]
    page.item(:feuille_header).value(@report.feuille)
    page.item(:report_month).value(I18n.l(@report.report_period.start, format: :monthname_abbrev, locale: :fr))
    page.item(:report_year).value(I18n.l(@report.report_period.start, format: :year, locale: :fr))
  end
end

@salaire_taxable_total = 0
@salaire_cotisable_total = 0
@salaire_cotisable_plafonne_total = 0
@retenue_taxe_prop_total = 0
@retenue_surt_prog_total = 0
@centime_add_com_total = 0
@retenue_taxe_com_total = 0

@salaire_taxable_last_total = 0
@salaire_cotisable_last_total = 0
@salaire_cotisable_plafonne_last_total = 0
@retenue_taxe_prop_last_total = 0
@retenue_surt_prog_last_total = 0
@centime_add_com_last_total = 0
@retenue_taxe_com_last_total = 0

@salaire_taxable_grand_total = 0
@salaire_cotisable_grand_total = 0
@salaire_cotisable_plafonne_grand_total = 0
@retenue_taxe_prop_grand_total = 0
@retenue_surt_prog_grand_total = 0
@centime_add_com_grand_total = 0
@retenue_taxe_com_grand_total = 0

def summary_vertical_rows(row)
  (2..5).each do |i|
    row.item(:"vertical_line_#{i}").hide
  end
  (6..13).each do |i|
    row.item(:"vertical_line_#{i}").show
  end
  row.item(:vertical_line_14).hide
end

def add_summary(list)
  # Totaux
  list.add_row(
        salaire_taxable: number_to_currency(@salaire_taxable_total, unit: '', locale: :cm),
        total: number_to_currency(@salaire_cotisable_total, unit: '', locale: :cm),
        plafonne: number_to_currency(@salaire_cotisable_plafonne_total, unit: '', locale: :cm),
        retenue_taxe_prop: number_to_currency(@retenue_taxe_prop_total, unit: '', locale: :cm),
        retenue_surt_prog: number_to_currency(@retenue_surt_prog_total, unit: '', locale: :cm),
        retenue_taxe_com: number_to_currency(@retenue_taxe_com_total, unit: '', locale: :cm),
      ) do |row|
    row.item(:summary_separator).show
    row.item(:totaux_header).show
    summary_vertical_rows(row)
  end

  # Rapport
  list.add_row(
        dipe_rapport: (@page_no == 0 ? "" : @dipe_page[(@page_no - 1)])
      ) do |row|
    if @salaire_taxable_last_total > 0
      row.item(:salaire_taxable).show
      row.item(:salaire_taxable).value(number_to_currency(@salaire_taxable_last_total, unit: '', locale: :cm))
      row.item(:total).show
      row.item(:total).value(number_to_currency(@salaire_cotisable_last_total, unit: '', locale: :cm))
      row.item(:plafonne).show
      row.item(:plafonne).value(number_to_currency(@salaire_cotisable_plafonne_last_total, unit: '', locale: :cm))
      row.item(:retenue_taxe_prop).show
      row.item(:retenue_taxe_prop).value(number_to_currency(@retenue_taxe_prop_last_total, unit: '', locale: :cm))
      row.item(:retenue_surt_prog).show
      row.item(:retenue_surt_prog).value(number_to_currency(@retenue_surt_prog_last_total, unit: '', locale: :cm))
      row.item(:retenue_taxe_com).show
      row.item(:retenue_taxe_com).value(number_to_currency(@retenue_taxe_com_last_total, unit: '', locale: :cm))
    end

    row.item(:rapport_header).show
    row.item(:dipe_rapport).show
    summary_vertical_rows(row)
    @page_no += 1
  end

  # Cumule
  list.add_row(
        salaire_taxable: number_to_currency(@salaire_taxable_grand_total, unit: '', locale: :cm),
        total: number_to_currency(@salaire_cotisable_grand_total, unit: '', locale: :cm),
        plafonne: number_to_currency(@salaire_cotisable_plafonne_grand_total, unit: '', locale: :cm),
        retenue_taxe_prop: number_to_currency(@retenue_taxe_prop_grand_total, unit: '', locale: :cm),
        retenue_surt_prog: number_to_currency(@retenue_surt_prog_grand_total, unit: '', locale: :cm),
        retenue_taxe_com: number_to_currency(@retenue_taxe_com_grand_total, unit: '', locale: :cm),
      ) do |row|
    row.item(:cumule_header).show
    summary_vertical_rows(row)
    row.item(:summary_separator_bottom).show
  end
end

# 1st page
report.list("dipes_group") do |list|

  @expected_count = @report.results.body.count
  @report.results.body.each_with_index do |t,num|
    x_dipes_no = t[0].to_s
    x_group = t[1].to_s
    x_matricule_cnps = t[2].to_s
    x_cle = t[3].to_s
    x_nb_jour = t[4].to_i
    x_salaire_brut = t[5].to_i
    x_elements_exception = t[6].to_i
    x_salaire_taxable = t[7].to_i
    x_total = t[8].to_i
    x_plafonne = t[9].to_i
    x_retenue_taxe_prop = t[10].to_i
    x_retenue_surt_prog = t[11].to_i
    x_centime_add_com = t[12].to_i
    x_retenue_taxe_com = t[13].to_i
    x_ligne = t[14].to_i
    x_matricule_intern = t[15].to_i

    list.add_row(
      matricule_cnps: x_matricule_cnps,
      cle: x_cle,
      number_of_days: x_nb_jour,
      salaire_brut: number_to_currency(x_salaire_brut, unit: '', locale: :cm),
      elements_exception: x_elements_exception,
      salaire_taxable: number_to_currency(x_salaire_taxable, unit: '', locale: :cm),
      total: number_to_currency(x_total, unit: '', locale: :cm),
      plafonne: number_to_currency(x_plafonne, unit: '', locale: :cm),
      retenue_taxe_prop: number_to_currency(x_retenue_taxe_prop, unit: '', locale: :cm),
      retenue_surt_prog: number_to_currency(x_retenue_surt_prog, unit: '', locale: :cm),
      centime_add_com: number_to_currency(x_centime_add_com, unit: '', locale: :cm),
      retenue_taxe_com: number_to_currency(x_retenue_taxe_com, unit: '', locale: :cm),
      ligne: x_ligne,
      matricule_intern: x_matricule_intern,
    )

    @salaire_taxable_total += x_salaire_taxable
    @salaire_cotisable_total += x_total
    @salaire_cotisable_plafonne_total += x_plafonne
    @retenue_taxe_prop_total += x_retenue_taxe_prop
    @retenue_surt_prog_total += x_retenue_surt_prog
    @centime_add_com_total += x_centime_add_com
    @retenue_taxe_com_total += x_retenue_taxe_com

    @salaire_taxable_grand_total += x_salaire_taxable
    @salaire_cotisable_grand_total += x_total
    @salaire_cotisable_plafonne_grand_total += x_plafonne
    @retenue_taxe_prop_grand_total += x_retenue_taxe_prop
    @retenue_surt_prog_grand_total += x_retenue_surt_prog
    @centime_add_com_grand_total += x_centime_add_com
    @retenue_taxe_com_grand_total += x_retenue_taxe_com

    @page_count += 1
    @total_count += 1

    # end the page and move on
    if (@page_count >= @dipe_per_page || @total_count == @expected_count)
      add_summary(list)

      @salaire_taxable_total = 0
      @salaire_cotisable_total = 0
      @salaire_cotisable_plafonne_total = 0
      @retenue_taxe_prop_total = 0
      @retenue_surt_prog_total = 0
      @centime_add_com_total = 0
      @retenue_taxe_com_total = 0

      @salaire_taxable_last_total = @salaire_taxable_grand_total
      @salaire_cotisable_last_total = @salaire_cotisable_grand_total
      @salaire_cotisable_plafonne_last_total = @salaire_cotisable_plafonne_grand_total
      @retenue_taxe_prop_last_total = @retenue_taxe_prop_grand_total
      @retenue_surt_prog_last_total = @retenue_surt_prog_grand_total
      @centime_add_com_last_total = @centime_add_com_grand_total
      @retenue_taxe_com_last_total = @retenue_taxe_com_grand_total

      if ((num + 1) < @expected_count)
        list.page_break
      end

      @page_count = 0
    end
  end

  # Switch to new layout for last page which is completely different
  report.use_layout 'app/views/reports/dipes_government_footer.tlf', id: :lp
  report.start_new_page layout: :lp do |page|

    page.item(:feuille_no).value(@report.feuille)
    page.item(:feuille_no_1).value(@report.feuille)

    page.item(:dipe_no_1).value(@report.dipe_by_page(3)) # WHY 3???
    page.item(:dipe_no_2).value(@report.dipe_by_page(3)) # WHY 3???

    page.item(:report_month_abbrev).value(@report.start.strftime("%m/%y"))
    page.item(:report_month_long).value(I18n.l(@report.start, format: :name_shortyear, locale: :fr))

    page.item(:surtaxe_prog_total).value(number_to_currency(@retenue_surt_prog_grand_total, unit: '', locale: :cm))
    page.item(:cac_surtaxe_prog_total).value(number_to_currency(@retenue_surt_prog_grand_total, unit: '', locale: :cm))
    page.item(:tax_prop_total).value(number_to_currency(@retenue_taxe_prop_grand_total, unit: '', locale: :cm))
    page.item(:cac_tax_prop_total).value(number_to_currency((@retenue_taxe_prop_grand_total * SystemVariable.value(:cac)).round, unit: '', locale: :cm))
    page.item(:tax_comm_total).value(number_to_currency(@retenue_taxe_com_grand_total, unit: '', locale: :cm))
    page.item(:penalties).value(number_to_currency(0, unit: '', locale: :cm))
    page.item(:versement_tresor).value(number_to_currency((
        @retenue_taxe_com_grand_total +
        @retenue_taxe_prop_grand_total +
        (@retenue_taxe_prop_grand_total * SystemVariable.value(:cac)).round), unit: '', locale: :cm))

    page.item(:reg_general_rate).value(
        number_to_percentage(SystemVariable.value(:age_benefits) * 100, precision: 2, format: "%n PC")
    )
    page.item(:pension_vieillesse_rate).value(
        number_to_percentage(SystemVariable.value(:emp_cnps) * 2 * 100, precision: 2, format: "%n PC")
    )
    page.item(:acc_travail_rate).value(
        number_to_percentage(SystemVariable.value(:accident) * 100, precision: 2, format: "%n PC")
    )

    page.item(:reg_general_total).value(number_to_currency(
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:age_benefits)).round, unit: '', locale: :cm))
    page.item(:pension_vieillesse_total).value(number_to_currency(
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:emp_cnps) * 2).round, unit: '', locale: :cm))
    page.item(:acc_travail_total).value(number_to_currency(
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:accident)).round, unit: '', locale: :cm))
    page.item(:versement_cnps_total).value(number_to_currency((
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:age_benefits)).round +
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:emp_cnps) * 2).round +
        (@salaire_cotisable_plafonne_grand_total * SystemVariable.value(:accident)).round), unit: '', locale: :cm))
    page.item(:penalties_retard_total).value(0)
    page.item(:majorat_retard_total).value(0)
  end
end
